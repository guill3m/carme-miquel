---
import '../styles/globals.scss'

import {
	UMAMI_ANALYTICS_HOST,
	UMAMI_ANALYTICS_ID,
	UMAMI_ANALYTICS_SCRIPT,
} from 'astro:env/client'

import SiteHeader from '../components/site-header.astro'
import SiteFooter from '../components/site-footer.astro'
import IconSprite from '../assets/icon-sprite.svg'

interface Props {
	color?: 'articles' | 'autora' | 'entrevistes' | 'llibres' | 'videos'
	title: string
	meta?: {
		title?: string
		description?: string
	}
	isSingle?: boolean
}

const { color, title, meta, isSingle } = Astro.props
const slots = Astro.slots

const TitleTag = isSingle ? 'div' : 'h1'
---

<!doctype html>
<html lang="ca">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="viewport"
			content="width=device-width,initial-scale=1,viewport-fit=cover"
		/>
		<title>{`${meta?.title ?? title} - Carme Miquel`}</title>
		{
			meta?.description && (
				<meta name="description" content={meta.description} />
			)
		}
		{/* Prevent iOS from formatting a book ISBN as a phone number */}
		<meta name="format-detection" content="telephone=no" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="author" href={`${Astro.site}humans.txt`} />
	</head>
	<body class={color}>
		{
			UMAMI_ANALYTICS_HOST && UMAMI_ANALYTICS_ID && UMAMI_ANALYTICS_SCRIPT && (
				<script
					is:inline
					defer
					data-domains="www.carmemiquel.com"
					data-host-url={UMAMI_ANALYTICS_HOST}
					data-website-id={UMAMI_ANALYTICS_ID}
					src={UMAMI_ANALYTICS_SCRIPT}
				/>
			)
		}
		<SiteHeader />
		<main class="main">
			<div class="title-aside">
				<TitleTag class="title">{title}</TitleTag>
				{slots.has('aside-top') && <slot name="aside-top" />}
			</div>
			<div class="content">
				<slot>Hello world!</slot>
			</div>
			{
				slots.has('aside') && (
					<aside class="aside">
						<slot name="aside" />
					</aside>
				)
			}
		</main>
		<SiteFooter />
		<IconSprite />
	</body>
</html>

<style lang="scss">
	@layer layout {
		.main {
			display: grid;
			gap: 2rem;
			grid-auto-flow: dense;
			grid-template-columns: 1fr;
			grid-template-rows: 1fr;
			margin-left: auto;
			margin-right: auto;
			max-width: var(--max-width);
			width: 100%;
		}

		.title {
			color: var(--color-highlight);
			font-family: var(--font-stack-serif);
			font-size: 2.75rem;
			font-weight: 700;
			font-weight: 700;
			line-height: 1;
			margin: 0;
			padding: 0;
		}

		.content {
			:global(p) {
				margin: 1em 0;

				&:first-child {
					margin-top: 0;
				}

				&:last-child {
					margin-bottom: 0;
				}
			}

			:global(h2) {
				margin-top: 3rem;

				&:first-child {
					margin-top: 0;
				}
			}

			:global(h3) {
				margin-top: 2.5rem;
			}

			:global(.alternate) {
				font-family: var(--font-stack-serif);

				:global(h2) {
					color: var(--color-highlight);
					font-size: 1.5rem;
					font-weight: 700;
					margin-top: 2.5rem;
				}
			}
		}

		.aside :global(img) {
			border-radius: 0.25rem;
		}

		@media (width >= 600px) {
			.main {
				grid-template-columns: repeat(3, 1fr);
				grid-template-rows: max-content 1fr;
			}

			.title-aside {
				grid-column: span 1;
			}

			.title {
				font-size: 2rem;
			}

			.content {
				grid-column: span 2;
				grid-row: span 2;
			}

			.aside {
				grid-column: span 1;
			}
		}

		@media (width >= 760px) {
			.title {
				font-size: 2.25rem;
			}
		}

		@media (width >= 850px) {
			.title {
				font-size: 2.5rem;
			}
		}

		@media (width >= 940px) {
			.title {
				font-size: 2.75rem;
			}
		}
	}
</style>
