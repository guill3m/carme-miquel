---
import { getCollection } from 'astro:content'
import { Picture } from 'astro:assets'

import BaseLayout from './layout.astro'
import Link from '../components/link.astro'
import { getPathFor } from '../helpers/get-path-for'

interface Props {
	frontmatter: {
		title: string
		meta?: {
			title?: string
			description?: string
		}
	}
}

const {
	frontmatter: { title, meta },
} = Astro.props

const videoCollection = await getCollection('video')
const videos = videoCollection.map((video) => ({
	title: video.data.title,
	url: getPathFor('video', video.id),
	thumbnail: video.data.thumbnail,
}))
---

<BaseLayout color="videos" title={title} meta={meta}>
	<ul class="video-list">
		{
			videos.map((video) => (
				<li class="video">
					<Link href={video.url}>
						<Picture
							alt=""
							densities={[1.5, 2, 3]}
							formats={['avif', 'webp']}
							height={250}
							src={video.thumbnail}
						/>
						<span class="video-title">{video.title}</span>
					</Link>
				</li>
			))
		}
	</ul>
	<slot />
</BaseLayout>

<style lang="scss">
	@layer layout {
		.video-list {
			display: grid;
			gap: 2rem;
			grid-auto-flow: dense;
			grid-template-columns: 1fr;
			grid-template-rows: 1fr;
			list-style: none;
			margin: 0;
			padding: 0;

			&:has(a:hover) a:not(:hover) {
				opacity: 0.5;
			}
		}

		.video {
			a {
				background: var(--color-background-dark);
				border-radius: 0.25rem;
				display: flex;
				flex-direction: column;
				font-size: 1.1rem;
				overflow: hidden;
				text-decoration: none;

				&:hover,
				&:focus {
					background: var(--color-background-dark-h);
					transform: scale(1.05);
				}
			}

			img {
				height: auto;
				vertical-align: bottom;
				width: 100%;
			}
		}

		.video-title {
			font-weight: 700;
			overflow: hidden;
			text-overflow: ellipsis;
			padding: 1em;
			white-space: nowrap;
		}

		@media (width >= 940px) {
			.video-list {
				grid-template-columns: repeat(2, 1fr);
			}
		}
	}
</style>
